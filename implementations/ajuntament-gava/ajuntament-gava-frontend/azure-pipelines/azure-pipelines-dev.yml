trigger:
  branches:
    include:
      - development
  paths:
    include:
      - implementations/ajuntament-gava/ajuntament-gava-frontend

pr: none

resources:
- repo: self

variables:
  # Docker Buildkit improves image build performance
  DOCKER_BUILDKIT: 1
  # Image repository
  gaviusFrontendRepo: 'ajuntament-gava-frontend'
  gaviusFrontendRepoEndpoint: 'k8scrvidchaindev.azurecr.io/ajuntament-gava-frontend'
  # Dockerfiles
  gaviusFrontendDocker: 'implementations/ajuntament-gava/ajuntament-gava-frontend/Dockerfile'
  # Kubernetes YAML
  gaviusFrontendKubernetes: 'implementations/ajuntament-gava/ajuntament-gava-frontend/k8s/k8s-dev.yml'
  # Kubernetes namespace
  namespace: 'development'
  # Image tagging: application version - build
  tagGaviusFrontend: '$(Build.BuildNumber)'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: 'Build stage'
  jobs:
  - job: GetShortCommit
    displayName: 'retrieve commit hash'
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: |
        commit=$(Build.SourceVersion)
        shortCommit=${commit:0:7}
        echo "##vso[build.updatebuildnumber]$(Build.BuildId)-commit.$shortCommit"
      displayName: 'retrieve $(packageJson) version'
  - job: BuildGaviusFrontend
    displayName: 'Build Gavius Frontend'
    pool:
      vmImage: $(vmImageName)
    steps:
    - bash: |
        cp ./implementations/ajuntament-gava/ajuntament-gava-frontend/envs/.env.development ./implementations/ajuntament-gava/ajuntament-gava-frontend/.env
        echo -e "\nREACT_APP_API_KEY=$API_KEY" >> ./implementations/ajuntament-gava/ajuntament-gava-frontend/.env
        echo -e "\nREACT_APP_VIDCHAIN_CLIENT_SECRET=$CLIENT_SECRET" >> ./implementations/ajuntament-gava/ajuntament-gava-frontend/.env
      name: load_env_variables_file
      displayName: 'load env vars'
      env:
        API_KEY: $(API_KEY_GAVA)
        CLIENT_SECRET: $(CLIENT_KEY_GAVA)
    - task: Docker@2
      displayName: Login ACR
      inputs:
        command: login
        containerRegistry: $(dockerRegistryServiceConnection)
    - script: "docker pull $(gaviusFrontendRepoEndpoint):latest"
      displayName: Pull latest for layer caching
      continueOnError: true # for first build, no cache
    - task: Docker@2
      displayName: "build --cache-from=$(gaviusFrontendRepoEndpoint):latest"
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(gaviusFrontendRepo)'
        command: 'build'
        Dockerfile: $(gaviusFrontendDocker)
        arguments: '--cache-from=$(gaviusFrontendRepoEndpoint):latest' 
        tags: |
          $(tagGaviusFrontend)
          latest
    - task: Docker@2
      displayName: "push"
      inputs:
        command: push
        containerRegistry: "$(dockerRegistryServiceConnection)"
        repository: $(gaviusFrontendRepo) 
        tags: |
          $(tagGaviusFrontend)
          latest 
- stage: Deploy
  displayName: 'Deploy stage'
  dependsOn: Build
  jobs:
  - deployment: DeployGaviusFrontend
    displayName: 'Deploy Gavius Frontend'
    pool:
      vmImage: $(vmImageName)
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - task: KubernetesManifest@0
            displayName: Create/update deployment
            inputs:              
              kubernetesServiceConnection: $(kubernetesServiceConnection)
              namespace: $(namespace)
              manifests: $(gaviusFrontendKubernetes)
              containers: |
                $(gaviusFrontendRepoEndpoint):$(tagGaviusFrontend)